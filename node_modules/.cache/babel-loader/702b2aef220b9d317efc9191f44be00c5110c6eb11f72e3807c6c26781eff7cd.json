{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nimport * as echarts from 'echarts';\nexport default {\n  name: \"ZhuZhuangTu\",\n  props: {\n    versionTypeData: Array,\n    //接受传递过来的版本类型数据\n    ChartTitle: String // 接收传递过来的标题\n  },\n  watch: {\n    versionTypeData(newData) {\n      if (newData && newData.length > 0) {\n        this.updateChart(newData);\n      }\n    },\n    chartTitle(newTitle) {\n      if (newTitle) {\n        this.updateTitle(newTitle);\n      }\n    }\n  },\n  mounted() {\n    this.getchart();\n  },\n  methods: {\n    //图表方法\n    getchart() {\n      const chartDom = document.getElementById('zhuzhuangtu');\n      this.myChart = echarts.init(chartDom);\n      const option = {\n        title: {\n          text: this.ChartTitle || \"家谱版本类型统计\",\n          //标题\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b} : {c} ({d}%)'\n        },\n        legend: {\n          type: 'scroll',\n          orient: 'vertical',\n          right: 10,\n          top: 20,\n          bottom: 20,\n          data: [] //右列的竖着排列的版本类型数据\n        },\n        series: [{\n          name: '版本类型',\n          type: 'pie',\n          radius: '55%',\n          center: ['40%', '50%'],\n          data: [],\n          //饼的数据\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          }\n        }]\n      };\n      option && this.myChart.setOption(option);\n    },\n    updateChart(versionTypeData) {\n      const legendData = versionTypeData.map(item => item.version);\n      const seriesData = versionTypeData.map(item => ({\n        name: item.version,\n        value: item.count\n      }));\n      const option = {\n        title: {\n          text: this.ChartTitle || \"家谱版本类型统计\",\n          //标题\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b} : {c} ({d}%)'\n        },\n        legend: {\n          type: 'scroll',\n          orient: 'vertical',\n          right: 10,\n          top: 20,\n          bottom: 20,\n          data: legendData //右列的竖着排列的版本类型数据\n        },\n        series: [{\n          name: '版本类型',\n          type: 'pie',\n          radius: '55%',\n          center: ['40%', '50%'],\n          data: seriesData,\n          //饼的数据\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          }\n        }]\n      };\n      option && this.myChart.setOption(option);\n    },\n    updateTitle(newTitle) {\n      this.myChart.setOption({\n        title: {\n          text: newTitle // 更新标题\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["echarts","name","props","versionTypeData","Array","ChartTitle","String","watch","newData","length","updateChart","chartTitle","newTitle","updateTitle","mounted","getchart","methods","chartDom","document","getElementById","myChart","init","option","title","text","left","tooltip","trigger","formatter","legend","type","orient","right","top","bottom","data","series","radius","center","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","setOption","legendData","map","item","version","seriesData","value","count"],"sources":["D:\\00demo\\jiapudemo1\\src\\components\\ZhuZhuangTu.vue"],"sourcesContent":["  <template>\r\n    <div class=\"ZhuZhuangTu\">\r\n      <!-- 提示占位内容 -->\r\n    <div id=\"zhuzhuangtu\" style=\"height: 600px;width: 800px\"></div>\r\n    </div>\r\n  </template>\r\n\r\n  <script>\r\n  import * as echarts from 'echarts';\r\n  export default {\r\n    name: \"ZhuZhuangTu\",\r\n\r\n    props: {\r\n      versionTypeData: Array, //接受传递过来的版本类型数据\r\n      ChartTitle: String,  // 接收传递过来的标题\r\n    },\r\n    watch: {\r\n      versionTypeData(newData) {\r\n        if (newData && newData.length > 0) {\r\n          this.updateChart(newData);\r\n        }\r\n      },\r\n      chartTitle(newTitle) {\r\n        if (newTitle) {\r\n          this.updateTitle(newTitle);\r\n        }\r\n      },\r\n      },\r\n      mounted() {\r\n        this.getchart();\r\n      },\r\n      methods: {\r\n        //图表方法\r\n        getchart() {\r\n          const chartDom = document.getElementById('zhuzhuangtu');\r\n          this.myChart = echarts.init(chartDom);\r\n\r\n          const option = {\r\n            title: {\r\n              text: this.ChartTitle ||\"家谱版本类型统计\",//标题\r\n              left: 'center'\r\n            },\r\n            tooltip: {\r\n              trigger: 'item',\r\n              formatter: '{a} <br/>{b} : {c} ({d}%)'\r\n            },\r\n            legend: {\r\n              type: 'scroll',\r\n              orient: 'vertical',\r\n              right: 10,\r\n              top: 20,\r\n              bottom: 20,\r\n              data: [],//右列的竖着排列的版本类型数据\r\n            },\r\n            series: [\r\n              {\r\n                name: '版本类型',\r\n                type: 'pie',\r\n                radius: '55%',\r\n                center: ['40%', '50%'],\r\n                data: [],//饼的数据\r\n                emphasis: {\r\n                  itemStyle: {\r\n                    shadowBlur: 10,\r\n                    shadowOffsetX: 0,\r\n                    shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                  }\r\n                }\r\n              }\r\n            ]\r\n          };\r\n\r\n          option && this.myChart.setOption(option);\r\n        },\r\n\r\n        updateChart(versionTypeData) {\r\n          const legendData = versionTypeData.map(item => item.version);\r\n          const seriesData = versionTypeData.map(item => ({\r\n            name: item.version,\r\n            value: item.count\r\n          }));\r\n\r\n          const option = {\r\n            title: {\r\n              text: this.ChartTitle ||\"家谱版本类型统计\",//标题\r\n              left: 'center'\r\n            },\r\n            tooltip: {\r\n              trigger: 'item',\r\n              formatter: '{a} <br/>{b} : {c} ({d}%)'\r\n            },\r\n            legend: {\r\n              type: 'scroll',\r\n              orient: 'vertical',\r\n              right: 10,\r\n              top: 20,\r\n              bottom: 20,\r\n              data: legendData//右列的竖着排列的版本类型数据\r\n            },\r\n            series: [\r\n              {\r\n                name: '版本类型',\r\n                type: 'pie',\r\n                radius: '55%',\r\n                center: ['40%', '50%'],\r\n                data: seriesData,//饼的数据\r\n                emphasis: {\r\n                  itemStyle: {\r\n                    shadowBlur: 10,\r\n                    shadowOffsetX: 0,\r\n                    shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                  }\r\n                }\r\n              }\r\n            ]\r\n          }\r\n          option && this.myChart.setOption(option);\r\n        },\r\n\r\n        updateTitle(newTitle) {\r\n          this.myChart.setOption({\r\n            title: {\r\n              text: newTitle, // 更新标题\r\n            },\r\n          });\r\n        },\r\n      },\r\n  };\r\n  </script>\r\n\r\n  <style scoped>\r\n  .ZhuZhuangTu {\r\n    width: 100%;\r\n    text-align: center;\r\n  }\r\n  #zhuzhuangtu{\r\n    width: 60%;\r\n    height: 600px;\r\n    margin: 0 auto;\r\n  }\r\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}