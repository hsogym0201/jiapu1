{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"ZhuZhuangTu\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 提示占位内容 \"), _cache[0] || (_cache[0] = _createElementVNode(\"div\", {\n    id: \"zhuzhuangtu\",\n    style: {\n      \"height\": \"600px\",\n      \"width\": \"800px\"\n    }\n  }, null, -1 /* HOISTED */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","id","style"],"sources":["D:\\下载\\jiapudemo1\\src\\components\\ZhuZhuangTu.vue"],"sourcesContent":["  <template>\r\n    <div class=\"ZhuZhuangTu\">\r\n      <!-- 提示占位内容 -->\r\n    <div id=\"zhuzhuangtu\" style=\"height: 600px;width: 800px\"></div>\r\n    </div>\r\n  </template>\r\n\r\n  <script>\r\n  import * as echarts from 'echarts';\r\n  export default {\r\n    name: \"ZhuZhuangTu\",\r\n\r\n    props: {\r\n      versionTypeData: Array, //接受传递过来的版本类型数据\r\n      ChartTitle: String,  // 接收传递过来的标题\r\n    },\r\n    watch: {\r\n      versionTypeData(newData) {\r\n        if (newData && newData.length > 0) {\r\n          this.updateChart(newData);\r\n        }\r\n      },\r\n      chartTitle(newTitle) {\r\n        if (newTitle) {\r\n          this.updateTitle(newTitle);\r\n        }\r\n      },\r\n      },\r\n      mounted() {\r\n        this.getchart();\r\n      },\r\n      methods: {\r\n        //图表方法\r\n        getchart() {\r\n          const chartDom = document.getElementById('zhuzhuangtu');\r\n          this.myChart = echarts.init(chartDom);\r\n\r\n          const option = {\r\n            title: {\r\n              text: this.ChartTitle ||\"家谱版本类型统计\",//标题\r\n              left: 'center'\r\n            },\r\n            tooltip: {\r\n              trigger: 'item',\r\n              formatter: '{a} <br/>{b} : {c} ({d}%)'\r\n            },\r\n            legend: {\r\n              type: 'scroll',\r\n              orient: 'vertical',\r\n              right: 10,\r\n              top: 20,\r\n              bottom: 20,\r\n              data: [],//右列的竖着排列的版本类型数据\r\n            },\r\n            series: [\r\n              {\r\n                name: '版本类型',\r\n                type: 'pie',\r\n                radius: '55%',\r\n                center: ['40%', '50%'],\r\n                data: [],//饼的数据\r\n                emphasis: {\r\n                  itemStyle: {\r\n                    shadowBlur: 10,\r\n                    shadowOffsetX: 0,\r\n                    shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                  }\r\n                }\r\n              }\r\n            ]\r\n          };\r\n\r\n          option && this.myChart.setOption(option);\r\n        },\r\n\r\n        updateChart(versionTypeData) {\r\n          const legendData = versionTypeData.map(item => item.version);\r\n          const seriesData = versionTypeData.map(item => ({\r\n            name: item.version,\r\n            value: item.count\r\n          }));\r\n\r\n          const option = {\r\n            title: {\r\n              text: this.ChartTitle ||\"家谱版本类型统计\",//标题\r\n              left: 'center'\r\n            },\r\n            tooltip: {\r\n              trigger: 'item',\r\n              formatter: '{a} <br/>{b} : {c} ({d}%)'\r\n            },\r\n            legend: {\r\n              type: 'scroll',\r\n              orient: 'vertical',\r\n              right: 10,\r\n              top: 20,\r\n              bottom: 20,\r\n              data: legendData//右列的竖着排列的版本类型数据\r\n            },\r\n            series: [\r\n              {\r\n                name: '版本类型',\r\n                type: 'pie',\r\n                radius: '55%',\r\n                center: ['40%', '50%'],\r\n                data: seriesData,//饼的数据\r\n                emphasis: {\r\n                  itemStyle: {\r\n                    shadowBlur: 10,\r\n                    shadowOffsetX: 0,\r\n                    shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                  }\r\n                }\r\n              }\r\n            ]\r\n          }\r\n          option && this.myChart.setOption(option);\r\n        },\r\n\r\n        updateTitle(newTitle) {\r\n          this.myChart.setOption({\r\n            title: {\r\n              text: newTitle, // 更新标题\r\n            },\r\n          });\r\n        },\r\n      },\r\n  };\r\n  </script>\r\n\r\n  <style scoped>\r\n  .ZhuZhuangTu {\r\n    width: 100%;\r\n    text-align: center;\r\n  }\r\n  #zhuzhuangtu{\r\n    width: 60%;\r\n    height: 600px;\r\n    margin: 0 auto;\r\n  }\r\n  </style>"],"mappings":";;EACSA,KAAK,EAAC;AAAa;;uBAAxBC,mBAAA,CAGM,OAHNC,UAGM,GAFJC,mBAAA,YAAe,E,0BACjBC,mBAAA,CAA+D;IAA1DC,EAAE,EAAC,aAAa;IAACC,KAAkC,EAAlC;MAAA;MAAA;IAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}