{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"XingShiXuanZe\",\n  style: {\n    \"width\": \"700px\",\n    \"height\": \"400px\",\n    \"border\": \"1px solid gray\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1);\n}","map":{"version":3,"names":["class","style","_createElementBlock","_hoisted_1"],"sources":["D:\\00demo\\jiapudemo1\\src\\components\\XingShiXuanZe.vue"],"sourcesContent":["\r\n\r\n<template>\r\n  <div class=\"XingShiXuanZe\" style=\"width: 700px; height: 400px; border: 1px solid gray;\">\r\n      \r\n  </div>\r\n</template>\r\n \r\n\r\n\r\n<script setup>\r\n// import list from \"@/assets/new.json\";\r\n// import emitter from \"@/utils/emitter\";\r\n// import { pinyin } from \"pinyin-pro\";\r\n// import { computed, ref } from \"vue\";\r\n\r\n// const alphabet = Array.from({ length: 26 }, (_, i) => String.fromCharCode(65 + i));\r\n// const uniqueFamilyNames = [...new Set(list.map(item => item['姓氏']))].map((item) => {\r\n//   return {\r\n//     label: item,\r\n//     value: pinyin(item)\r\n//   };\r\n// });\r\n\r\n// const curName = ref(\"\");\r\n// const curLetter = ref(\"\");\r\n// const filteredFamilyNames = computed(() => {\r\n//   return uniqueFamilyNames.filter(item => item.value.startsWith(curLetter.value.toLowerCase()));\r\n// });\r\n\r\n// const onNameClick = (value) => {\r\n//   if (curName.value === value) {\r\n//     return;\r\n//   }\r\n//   curName.value = value;\r\n//   emitter.emit(\"data\", list.filter((item) => item[\"姓氏\"] === value));\r\n// }\r\n</script>\r\n\r\n"],"mappings":";;EAGOA,KAAK,EAAC,eAAe;EAACC,KAA4D,EAA5D;IAAA;IAAA;IAAA;EAAA;;;uBAA3BC,mBAAA,CAEM,OAFNC,UAEM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}