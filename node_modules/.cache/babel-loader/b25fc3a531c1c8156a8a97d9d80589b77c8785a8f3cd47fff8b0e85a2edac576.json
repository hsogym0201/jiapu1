{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport { onMounted, ref } from 'vue';\nimport * as echarts from 'echarts';\n\n//引入\nimport Chinamap from '../assets/china.json';\nimport MyData from '../assets/new.json';\nexport default {\n  __name: 'DiTu1',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const province = ['北京', '天津', '河北', '山西', '内蒙古', '辽宁', '吉林', '黑龙江', '上海', '江苏', '浙江', '安徽', '福建', '江西', '山东', '河南', '湖北', '湖南', '广东', '广西', '海南', '重庆', '四川', '贵州', '云南', '西藏', '陕西', '甘肃', '青海', '宁夏', '新疆', '台湾', '澳门', '香港'];\n    const phases = [{\n      start: 1600,\n      end: 1700\n    }, {\n      start: 1701,\n      end: 1800\n    }, {\n      start: 1801,\n      end: 1900\n    }, {\n      start: 1901,\n      end: 2000\n    }, {\n      start: 2001,\n      end: 2024\n    }];\n    const phasesName = [\"17世纪\", \"18世纪\", \"19世纪\", \"20世纪\", \"21世纪\"];\n    let chart = ref();\n    let option = {\n      baseOption: {\n        timeline: {\n          axisType: 'category',\n          // realtime: false,\n          // loop: false,\n          autoPlay: true,\n          playInterval: 2000,\n          symbolSize: 12,\n          left: '5%',\n          right: '5%',\n          bottom: '0%',\n          width: '90%',\n          // controlStyle: {\n          //     position: 'left'\n          // },\n          data: phasesName,\n          tooltip: {\n            formatter: phases\n          }\n        },\n        tooltip: {\n          show: true,\n          formatter: function (params) {\n            return params.name + '：' + params.data['value'];\n          }\n        },\n        visualMap: {\n          type: 'piecewise',\n          pieces: [{\n            min: 1000,\n            max: 7000,\n            color: '#BD430A'\n          }, {\n            min: 501,\n            max: 1000,\n            color: '#E08150'\n          }, {\n            min: 101,\n            max: 500,\n            color: '#E9B090'\n          }, {\n            min: 1,\n            max: 100,\n            color: '#F2DDD2'\n          }, {\n            value: 0,\n            color: 'white'\n          }],\n          orient: 'vertical',\n          itemWidth: 25,\n          itemHeight: 15,\n          showLabel: true,\n          seriesIndex: [0],\n          textStyle: {\n            color: '#7B93A7'\n          },\n          bottom: '10%',\n          left: \"5%\"\n        },\n        grid: {\n          right: '5%',\n          top: '20%',\n          bottom: '10%',\n          width: '20%'\n        },\n        xAxis: {\n          // min: 0,\n          // max: 4000,\n          scale: true,\n          show: false\n        },\n        yAxis: [{\n          inverse: true,\n          offset: '2',\n          'type': 'category',\n          data: '',\n          nameTextStyle: {\n            color: '#fff'\n          },\n          axisTick: {\n            show: false\n          },\n          axisLabel: {\n            //rotate:45,\n            textStyle: {\n              fontSize: 14,\n              color: '#000000'\n            },\n            interval: 0\n          },\n          axisLine: {\n            show: false,\n            lineStyle: {\n              color: '#333'\n            }\n          },\n          splitLine: {\n            show: false,\n            lineStyle: {\n              color: '#333'\n            }\n          }\n        }],\n        geo: {\n          map: 'chinaa',\n          right: '35%',\n          left: '20%',\n          label: {\n            emphasis: {\n              show: false\n            }\n          },\n          itemStyle: {\n            emphasis: {\n              areaColor: '#8792b3'\n            }\n          }\n        },\n        series: [{\n          name: 'mapSer',\n          type: 'map',\n          map: 'chinaa',\n          roam: false,\n          geoIndex: 0,\n          label: {\n            show: false\n          }\n        }, {\n          'name': '',\n          'type': 'bar',\n          zlevel: 2,\n          barWidth: '40%',\n          label: {\n            normal: {\n              show: true,\n              fontSize: 14,\n              position: 'right',\n              formatter: '{c}'\n            }\n          }\n        }]\n      },\n      animationDurationUpdate: 3000,\n      animationEasingUpdate: 'quinticInOut',\n      options: []\n    };\n    onMounted(() => {\n      const dataCounts = new Array(phases.length).fill(0).map(() => Array(province.length).fill(0));\n      MyData.forEach(item => {\n        const year = parseInt(item.版本年代);\n        phases.forEach((phase, phaseIndex) => {\n          if (year >= phase.start && year <= phase.end) {\n            province.forEach((prov, index) => {\n              if (item.居地.includes(prov)) {\n                dataCounts[phaseIndex][index]++;\n              }\n            });\n          }\n        });\n      });\n      console.log(\"Phase Province Counts:\", dataCounts);\n      console.log(\"****************************\");\n      for (let n = 0; n < phases.length; n++) {\n        var res = [];\n        for (let j = 0; j < dataCounts[n].length; j++) {\n          res.push({\n            name: province[j],\n            value: dataCounts[n][j]\n          });\n        }\n        //降序取前10名\n        res.sort(function (a, b) {\n          return b.value - a.value;\n        });\n        console.log(res);\n        let res1 = [];\n        let res2 = [];\n        for (let t = 0; t < 10; t++) {\n          res1[t] = res[t].name;\n          res2[t] = res[t].value;\n        }\n        console.log(res1);\n        console.log(res2);\n        console.log(\"****************************\");\n        option.options.push({\n          yAxis: {\n            data: res1\n          },\n          series: [{\n            type: 'map',\n            data: res\n          }, {\n            type: 'bar',\n            data: res2,\n            itemStyle: {\n              normal: {\n                color: function (params) {\n                  // build a color map as your need.\n                  var colorList = [{\n                    colorStops: [{\n                      offset: 0,\n                      color: '#BD430A' // 0% 处的颜色\n                    }, {\n                      offset: 1,\n                      color: '#BD430A' // 100% 处的颜色\n                    }]\n                  }, {\n                    colorStops: [{\n                      offset: 0,\n                      color: '#BD430A' // 0% 处的颜色\n                    }, {\n                      offset: 1,\n                      color: '#BD430A' // 100% 处的颜色\n                    }]\n                  }];\n                  if (params.dataIndex < 3) {\n                    return colorList[0];\n                  } else {\n                    return colorList[1];\n                  }\n                }\n              }\n            }\n          }]\n        });\n      }\n\n      // 基于准备好的dom，初始化echarts实例\n      let myChart = echarts.init(chart.value);\n\n      //注册Map\n      echarts.registerMap('chinaa', Chinamap);\n\n      // 使用配置。\n      myChart.setOption(option);\n    });\n    const __returned__ = {\n      province,\n      phases,\n      phasesName,\n      get chart() {\n        return chart;\n      },\n      set chart(v) {\n        chart = v;\n      },\n      get option() {\n        return option;\n      },\n      set option(v) {\n        option = v;\n      },\n      onMounted,\n      ref,\n      get echarts() {\n        return echarts;\n      },\n      get Chinamap() {\n        return Chinamap;\n      },\n      get MyData() {\n        return MyData;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["onMounted","ref","echarts","Chinamap","MyData","province","phases","start","end","phasesName","chart","option","baseOption","timeline","axisType","autoPlay","playInterval","symbolSize","left","right","bottom","width","data","tooltip","formatter","show","params","name","visualMap","type","pieces","min","max","color","value","orient","itemWidth","itemHeight","showLabel","seriesIndex","textStyle","grid","top","xAxis","scale","yAxis","inverse","offset","nameTextStyle","axisTick","axisLabel","fontSize","interval","axisLine","lineStyle","splitLine","geo","map","label","emphasis","itemStyle","areaColor","series","roam","geoIndex","zlevel","barWidth","normal","position","animationDurationUpdate","animationEasingUpdate","options","dataCounts","Array","length","fill","forEach","item","year","parseInt","版本年代","phase","phaseIndex","prov","index","居地","includes","console","log","n","res","j","push","sort","a","b","res1","res2","t","colorList","colorStops","dataIndex","myChart","init","registerMap","setOption"],"sources":["D:/下载/jiapudemo1/src/components/DiTu1.vue"],"sourcesContent":["\r\n<template>\r\n  <div class=\"DiTu1\">\r\n    <!-- 提示占位内容 -->\r\n    <!-- <p>地图1功能正在开发中...</p> -->\r\n    <div ref=\"chart\" style=\"width: 600px; height: 400px; border: 1px solid gray;\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport { onMounted,  ref } from 'vue';\r\nimport * as echarts from 'echarts'\r\n\r\n//引入\r\nimport Chinamap from '../assets/china.json'\r\nimport MyData from '../assets/new.json'\r\n\r\nconst province = [\r\n    '北京', '天津', '河北', '山西', '内蒙古', '辽宁', '吉林', \r\n    '黑龙江', '上海', '江苏', '浙江', '安徽', '福建', '江西', \r\n    '山东', '河南', '湖北', '湖南', '广东', '广西', '海南', \r\n    '重庆', '四川', '贵州', '云南', '西藏', '陕西', '甘肃', \r\n    '青海', '宁夏', '新疆', '台湾', '澳门', '香港'];\r\n\r\nconst phases = [\r\n    { start: 1600, end: 1700 },\r\n    { start: 1701, end: 1800 },\r\n    { start: 1801, end: 1900 },\r\n    { start: 1901, end: 2000 },\r\n    { start: 2001, end: 2024 }\r\n];\r\nconst phasesName = [\"17世纪\", \"18世纪\", \"19世纪\",\"20世纪\", \"21世纪\"];\r\n\r\nlet chart = ref();\r\nlet option = {\r\n    baseOption: {\r\n        timeline: {\r\n            axisType: 'category',\r\n            // realtime: false,\r\n            // loop: false,\r\n            autoPlay: true,\r\n            playInterval: 2000,\r\n            symbolSize: 12,\r\n            left: '5%',\r\n            right: '5%',\r\n            bottom: '0%',\r\n            width: '90%',\r\n            // controlStyle: {\r\n            //     position: 'left'\r\n            // },\r\n            data: phasesName,\r\n            tooltip: {\r\n                formatter: phases\r\n            },\r\n        },\r\n        tooltip: {\r\n            show: true,\r\n            formatter: function(params) {\r\n                return params.name + '：' + params.data['value']\r\n            },\r\n        },\r\n        visualMap: {\r\n            type: 'piecewise',\r\n            pieces: [\r\n                {\r\n                    min: 1000,\r\n                    max: 7000,\r\n                    color: '#BD430A'\r\n                },\r\n                {\r\n                    min: 501,\r\n                    max: 1000,\r\n                    color: '#E08150'\r\n                },\r\n                {\r\n                    min: 101,\r\n                    max: 500,\r\n                    color: '#E9B090'\r\n                },\r\n                {\r\n                    min: 1,\r\n                    max: 100,\r\n                    color: '#F2DDD2'\r\n                },\r\n                {\r\n                    value: 0,\r\n                    color: 'white'\r\n                }\r\n            ],\r\n            orient: 'vertical',\r\n            itemWidth: 25,\r\n            itemHeight: 15,\r\n            showLabel: true,\r\n            seriesIndex: [0],\r\n\r\n            textStyle: {\r\n                color: '#7B93A7'\r\n            },\r\n            bottom: '10%',\r\n            left: \"5%\",\r\n        },\r\n        grid: {\r\n            right: '5%',\r\n            top: '20%',\r\n            bottom: '10%',\r\n            width: '20%'\r\n        },\r\n        xAxis: {\r\n            // min: 0,\r\n            // max: 4000,\r\n            scale:true,\r\n            show: false\r\n        },\r\n        yAxis: [{\r\n            inverse: true,\r\n            offset: '2',\r\n            'type': 'category',\r\n            data: '',\r\n            nameTextStyle: {\r\n                color: '#fff'\r\n            },\r\n            axisTick: {\r\n                show: false,\r\n            },\r\n            axisLabel: {\r\n                //rotate:45,\r\n                textStyle: {\r\n                    fontSize: 14,\r\n                    color: '#000000',\r\n                },\r\n                interval: 0\r\n            },\r\n            axisLine: {\r\n                show: false,\r\n                lineStyle: {\r\n                    color: '#333'\r\n                },\r\n            },\r\n            splitLine: {\r\n                show: false,\r\n                lineStyle: {\r\n                    color: '#333'\r\n                }\r\n            },\r\n        }],\r\n        geo: {\r\n            map: 'chinaa',\r\n            right: '35%',\r\n            left: '20%',\r\n            label: {\r\n                emphasis: {\r\n                    show: false\r\n                }\r\n            },\r\n            itemStyle: {\r\n                emphasis: {\r\n                    areaColor: '#8792b3'\r\n                }\r\n            }\r\n        },\r\n        series: [{\r\n                name: 'mapSer',\r\n                type: 'map',\r\n                map: 'chinaa',\r\n                roam: false,\r\n                geoIndex: 0,\r\n                label: {\r\n                    show: false,\r\n                },\r\n            },\r\n            {\r\n                'name': '',\r\n                'type': 'bar',\r\n                zlevel: 2,\r\n                barWidth: '40%',\r\n                label: {\r\n                    normal: {\r\n                        show: true,\r\n                        fontSize: 14,\r\n                        position: 'right',\r\n                        formatter: '{c}'\r\n                    }\r\n                },\r\n            }\r\n        ],\r\n    },\r\n    animationDurationUpdate: 3000,\r\n    animationEasingUpdate: 'quinticInOut',\r\n    options: []\r\n};\r\n\r\nonMounted(() => {\r\n    const dataCounts = new Array(phases.length).fill(0).map(() => Array(province.length).fill(0));\r\n\r\n    MyData.forEach(item => {\r\n        const year = parseInt(item.版本年代);\r\n        phases.forEach((phase, phaseIndex) => {\r\n            if (year >= phase.start && year <= phase.end) {\r\n                province.forEach((prov, index) => {\r\n                    if (item.居地.includes(prov)) {\r\n                        dataCounts[phaseIndex][index]++;\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    });\r\n\r\n    console.log(\"Phase Province Counts:\", dataCounts);\r\n    console.log(\"****************************\");\r\n\r\n    \r\n    for (let n = 0; n < phases.length; n++) {\r\n        var res = [];\r\n        for (let j = 0; j < dataCounts[n].length; j++) {\r\n            res.push({\r\n                name: province[j],\r\n                value: dataCounts[n][j]\r\n            });\r\n        }\r\n        //降序取前10名\r\n        res.sort(function(a, b) {return b.value - a.value;});\r\n        console.log(res);\r\n        let res1 = [];\r\n        let res2 = [];\r\n        for (let t = 0; t < 10; t++) {\r\n            res1[t] = res[t].name;\r\n            res2[t] = res[t].value;\r\n        }\r\n        console.log(res1);\r\n        console.log(res2);\r\n        console.log(\"****************************\");\r\n        option.options.push({\r\n            yAxis: {\r\n                data: res1,\r\n            },\r\n            series: [{\r\n                type: 'map',\r\n                data: res\r\n                }, {\r\n                type: 'bar',\r\n                data: res2,\r\n                itemStyle: {\r\n                    normal: {\r\n                        color: function(params) {\r\n                        // build a color map as your need.\r\n                        var colorList = [{\r\n                                colorStops: [{\r\n                                    offset: 0,\r\n                                    color: '#BD430A' // 0% 处的颜色\r\n                                }, {\r\n                                    offset: 1,\r\n                                    color: '#BD430A' // 100% 处的颜色\r\n                                }]\r\n                            },\r\n                            {\r\n                                colorStops: [{\r\n                                    offset: 0,\r\n                                    color: '#BD430A' // 0% 处的颜色\r\n                                }, {\r\n                                    offset: 1,\r\n                                    color: '#BD430A' // 100% 处的颜色\r\n                                }]\r\n                            }\r\n                        ];\r\n                        if (params.dataIndex < 3) {\r\n                            return colorList[0]\r\n                        } else {\r\n                            return colorList[1]\r\n                        }\r\n                    },\r\n                    }\r\n                },\r\n            }]\r\n        });\r\n    }\r\n\r\n    // 基于准备好的dom，初始化echarts实例\r\n    let myChart = echarts.init(chart.value);\r\n\r\n    //注册Map\r\n    echarts.registerMap('chinaa',Chinamap);\r\n\r\n    // 使用配置。\r\n    myChart.setOption(option);\r\n\r\n});\r\n</script>\r\n\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}