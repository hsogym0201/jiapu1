{"ast":null,"code":"import { defineComponent, onMounted } from \"vue\";\nimport * as echarts from \"echarts/core\";\n// import * as echarts from \"echarts/core\";\n// import { use, registerMap } from \"echarts/core\";\n// import { MapChart } from \"echarts/charts\";\n// import { TooltipComponent } from \"echarts/components\";\n// import { CanvasRenderer } from \"echarts/renderers\";\nimport chinaMap from \"@/assets/china.json\"; // 中国地图数据\n\nuse([CanvasRenderer, MapChart, TooltipComponent]);\nexport default defineComponent({\n  name: \"chinaMap\",\n  emits: [\"province-clicked\"],\n  // 声明事件\n  setup(props, {\n    emit\n  }) {\n    onMounted(() => {\n      const chart = echarts.init(document.getElementById(\"china-map\"));\n\n      // 注册地图数据\n      registerMap(\"china\", chinaMap);\n\n      // 配置地图\n      const option = {\n        tooltip: {\n          trigger: \"item\",\n          formatter: params => {\n            return params.name; // 仅显示省份名称\n          }\n        },\n        series: [{\n          name: \"中国地图\",\n          type: \"map\",\n          map: \"china\",\n          roam: true,\n          // 支持缩放和拖动\n          label: {\n            show: true,\n            // 显示省份名称\n            color: \"#000\",\n            // 名称字体颜色\n            fontSize: 12,\n            // 名称字体大小\n            emphasis: {},\n            label: {\n              show: true,\n              color: \"red\" // 点击后高亮显示文字颜色\n            },\n            itemStyle: {\n              areaColor: \"yellow\" // 点击后高亮区域颜色\n            }\n          },\n          data: [] // 不需要显示统计数据，因此数据为空\n        }]\n      };\n      chart.setOption(option);\n\n      // 监听点击事件\n      chart.on(\"click\", params => {\n        if (params.componentType === \"series\") {\n          const provinceName = params.name; // 获取被点击的省份名称\n          console.log(\"点击的省份：\", provinceName);\n          emit(\"province-clicked\", provinceName); // 通过事件将省份名称传递给父组件\n        }\n      });\n    });\n  }\n});","map":{"version":3,"names":["defineComponent","onMounted","echarts","chinaMap","use","CanvasRenderer","MapChart","TooltipComponent","name","emits","setup","props","emit","chart","init","document","getElementById","registerMap","option","tooltip","trigger","formatter","params","series","type","map","roam","label","show","color","fontSize","emphasis","itemStyle","areaColor","data","setOption","on","componentType","provinceName","console","log"],"sources":["D:\\00demo\\jiapudemo1\\src\\components\\DiTu2.vue"],"sourcesContent":["<template>\r\n  <div id=\"china-map\" style=\"width: 100%; height: 500px;\"></div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent, onMounted } from \"vue\";\r\nimport * as echarts from \"echarts/core\";\r\n// import * as echarts from \"echarts/core\";\r\n// import { use, registerMap } from \"echarts/core\";\r\n// import { MapChart } from \"echarts/charts\";\r\n// import { TooltipComponent } from \"echarts/components\";\r\n// import { CanvasRenderer } from \"echarts/renderers\";\r\nimport chinaMap from \"@/assets/china.json\"; // 中国地图数据\r\n\r\nuse([CanvasRenderer, MapChart, TooltipComponent]);\r\n\r\nexport default defineComponent({\r\n  name: \"chinaMap\",\r\n  emits: [\"province-clicked\"], // 声明事件\r\n  setup(props, { emit }) {\r\n    onMounted(() => {\r\n      const chart = echarts.init(document.getElementById(\"china-map\"));\r\n\r\n      // 注册地图数据\r\n      registerMap(\"china\", chinaMap);\r\n\r\n      // 配置地图\r\n      const option = {\r\n        tooltip: {\r\n          trigger: \"item\",\r\n          formatter: (params) => {\r\n            return params.name; // 仅显示省份名称\r\n          },\r\n        },\r\n        series: [\r\n          {\r\n            name: \"中国地图\",\r\n            type: \"map\",\r\n            map: \"china\",\r\n            roam: true, // 支持缩放和拖动\r\n            label: {\r\n              show: true, // 显示省份名称\r\n              color: \"#000\", // 名称字体颜色\r\n              fontSize: 12, // 名称字体大小\r\n              emphasis: {\r\n            },\r\n              label: {\r\n                show: true,\r\n                color: \"red\", // 点击后高亮显示文字颜色\r\n              },\r\n              itemStyle: {\r\n                areaColor: \"yellow\", // 点击后高亮区域颜色\r\n              },\r\n            },\r\n            data: [], // 不需要显示统计数据，因此数据为空\r\n          },\r\n        ],\r\n      };\r\n\r\n      chart.setOption(option);\r\n\r\n      // 监听点击事件\r\n      chart.on(\"click\", (params) => {\r\n        if (params.componentType === \"series\") {\r\n\r\n          const provinceName = params.name; // 获取被点击的省份名称\r\n          console.log(\"点击的省份：\", provinceName);\r\n          emit(\"province-clicked\", provinceName); // 通过事件将省份名称传递给父组件\r\n        }\r\n      });\r\n    });\r\n  },\r\n});\r\n</script>\r\n\r\n<style>\r\n/* 添加样式（可选） */\r\n</style>\r\n"],"mappings":"AAKA,SAASA,eAAe,EAAEC,SAAQ,QAAS,KAAK;AAChD,OAAO,KAAKC,OAAM,MAAO,cAAc;AACvC;AACA;AACA;AACA;AACA;AACA,OAAOC,QAAO,MAAO,qBAAqB,EAAE;;AAE5CC,GAAG,CAAC,CAACC,cAAc,EAAEC,QAAQ,EAAEC,gBAAgB,CAAC,CAAC;AAEjD,eAAeP,eAAe,CAAC;EAC7BQ,IAAI,EAAE,UAAU;EAChBC,KAAK,EAAE,CAAC,kBAAkB,CAAC;EAAE;EAC7BC,KAAKA,CAACC,KAAK,EAAE;IAAEC;EAAK,CAAC,EAAE;IACrBX,SAAS,CAAC,MAAM;MACd,MAAMY,KAAI,GAAIX,OAAO,CAACY,IAAI,CAACC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAAC;;MAEhE;MACAC,WAAW,CAAC,OAAO,EAAEd,QAAQ,CAAC;;MAE9B;MACA,MAAMe,MAAK,GAAI;QACbC,OAAO,EAAE;UACPC,OAAO,EAAE,MAAM;UACfC,SAAS,EAAGC,MAAM,IAAK;YACrB,OAAOA,MAAM,CAACd,IAAI,EAAE;UACtB;QACF,CAAC;QACDe,MAAM,EAAE,CACN;UACEf,IAAI,EAAE,MAAM;UACZgB,IAAI,EAAE,KAAK;UACXC,GAAG,EAAE,OAAO;UACZC,IAAI,EAAE,IAAI;UAAE;UACZC,KAAK,EAAE;YACLC,IAAI,EAAE,IAAI;YAAE;YACZC,KAAK,EAAE,MAAM;YAAE;YACfC,QAAQ,EAAE,EAAE;YAAE;YACdC,QAAQ,EAAE,CACZ,CAAC;YACCJ,KAAK,EAAE;cACLC,IAAI,EAAE,IAAI;cACVC,KAAK,EAAE,KAAK,CAAE;YAChB,CAAC;YACDG,SAAS,EAAE;cACTC,SAAS,EAAE,QAAQ,CAAE;YACvB;UACF,CAAC;UACDC,IAAI,EAAE,EAAE,CAAE;QACZ,CAAC;MAEL,CAAC;MAEDrB,KAAK,CAACsB,SAAS,CAACjB,MAAM,CAAC;;MAEvB;MACAL,KAAK,CAACuB,EAAE,CAAC,OAAO,EAAGd,MAAM,IAAK;QAC5B,IAAIA,MAAM,CAACe,aAAY,KAAM,QAAQ,EAAE;UAErC,MAAMC,YAAW,GAAIhB,MAAM,CAACd,IAAI,EAAE;UAClC+B,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEF,YAAY,CAAC;UACnC1B,IAAI,CAAC,kBAAkB,EAAE0B,YAAY,CAAC,EAAE;QAC1C;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}