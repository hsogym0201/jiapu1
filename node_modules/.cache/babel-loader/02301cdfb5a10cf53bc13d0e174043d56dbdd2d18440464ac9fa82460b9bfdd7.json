{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"ZheXianTu\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 图表展示区域 \"), _cache[0] || (_cache[0] = _createElementVNode(\"div\", {\n    id: \"main\"\n  }, null, -1 /* HOISTED */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","id"],"sources":["D:\\下载\\jiapudemo1\\src\\components\\ZheXianTu.vue"],"sourcesContent":["<template>\r\n  <div class=\"ZheXianTu\">\r\n    <!-- 图表展示区域 -->\r\n    <div id=\"main\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from \"echarts\";\r\nimport jsonData from '@/assets/new.json'; // 确保引入了 new.json\r\n\r\nexport default {\r\n  name: \"ZheXianTu\",\r\n  data() {\r\n    return {\r\n      myChart: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    // 初始化图表\r\n    this.myChart = echarts.init(document.getElementById(\"main\"));\r\n    // 加载默认的折线图数据（例如：姓氏“李”）\r\n    this.loadDefaultChart();\r\n  },\r\n  methods: {\r\n    // 加载默认的折线图数据\r\n    loadDefaultChart() {\r\n      const defaultSurname = '李'; // 你可以根据实际情况选择默认姓氏\r\n      const versionData = this.getSurnameVersionData(defaultSurname);\r\n      this.updateChart(versionData);\r\n    },\r\n    // 根据姓氏获取版本数据（假设数据结构中有“版本年代”和“数量”字段）\r\n    getSurnameVersionData(surname) {\r\n      // 筛选出该姓氏的数据\r\n      const surnameData = jsonData.filter(item => item.姓氏 === surname);\r\n      const versionData = [];\r\n\r\n      surnameData.forEach(item => {\r\n        // 假设 `item.版本年代` 是年份或某个时间戳，`item.数量` 是该时间点的数量\r\n        const version = item.版本年代;\r\n        const count = item.数量;\r\n\r\n        // 找到该版本数据，若存在则累加数量\r\n        const existingVersion = versionData.find(v => v.version === version);\r\n        if (existingVersion) {\r\n          existingVersion.count += count;\r\n        } else {\r\n          versionData.push({ version, count });\r\n        }\r\n      });\r\n\r\n      // 按照年份或版本年代排序\r\n      versionData.sort((a, b) => a.version - b.version);\r\n\r\n      return versionData;\r\n    },\r\n    // 更新图表\r\n    updateChart(versionData) {\r\n      const labels = versionData.map(item => item.version);\r\n      const data = versionData.map(item => item.count);\r\n\r\n      const option = {\r\n        title: {\r\n          left: \"center\",\r\n          text: \"家谱数量随时间的变化\", // 修改标题\r\n        },\r\n        tooltip: {\r\n          trigger: \"axis\",\r\n        },\r\n        xAxis: {\r\n          data: labels,\r\n        },\r\n        yAxis: {},\r\n        series: [\r\n          {\r\n            name: \"数量变化\",\r\n            type: \"line\",\r\n            showSymbol: false,\r\n            data: data,\r\n            lineStyle: { width: 2 },\r\n            areaStyle: { color: { type: \"linear\", x: 0, y: 0, x2: 0, y2: 1 } },\r\n          },\r\n        ],\r\n      };\r\n\r\n      // 设置图表配置\r\n      this.myChart.setOption(option);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.ZheXianTu {\r\n  width: 100%; /* 父容器宽度 */\r\n  text-align: center; /* 父容器文字和内容居中 */\r\n}\r\n\r\n#main {\r\n  width: 60%; /* 图表宽度设置为 60% */\r\n  height: 600px; /* 图表高度为 600px */\r\n  margin: 0 auto; /* 居中 */\r\n  background: #fff;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAW;;uBAAtBC,mBAAA,CAGM,OAHNC,UAGM,GAFJC,mBAAA,YAAe,E,0BACfC,mBAAA,CAAqB;IAAhBC,EAAE,EAAC;EAAM,4B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}