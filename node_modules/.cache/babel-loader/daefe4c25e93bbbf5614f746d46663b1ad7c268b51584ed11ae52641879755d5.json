{"ast":null,"code":"import \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport list from \"@/assets/new.json\";\nimport emitter from \"@/utils/emitter\";\nimport { pinyin } from \"pinyin-pro\";\nimport { computed, ref } from \"vue\";\n\n// const alphabet = Array.from({ length: 26 }, (_, i) => String.fromCharCode(65 + i));\n\nexport default {\n  __name: 'XingShiXuanZe',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const uniqueFamilyNames = [...new Set(list.map(item => item['姓氏']))].map(item => {\n      return {\n        label: item,\n        value: pinyin(item)\n      };\n    });\n    const curName = ref(\"\");\n    const curLetter = ref(\"\");\n    const filteredFamilyNames = computed(() => {\n      return uniqueFamilyNames.filter(item => item.value.startsWith(curLetter.value.toLowerCase()));\n    });\n    const onNameClick = value => {\n      if (curName.value === value) {\n        return;\n      }\n      curName.value = value;\n      emitter.emit(\"data\", list.filter(item => item[\"姓氏\"] === value));\n    };\n    const __returned__ = {\n      uniqueFamilyNames,\n      curName,\n      curLetter,\n      filteredFamilyNames,\n      onNameClick,\n      get list() {\n        return list;\n      },\n      get emitter() {\n        return emitter;\n      },\n      get pinyin() {\n        return pinyin;\n      },\n      computed,\n      ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["list","emitter","pinyin","computed","ref","uniqueFamilyNames","Set","map","item","label","value","curName","curLetter","filteredFamilyNames","filter","startsWith","toLowerCase","onNameClick","emit"],"sources":["D:/00demo/jiapudemo1/src/components/XingShiXuanZe.vue"],"sourcesContent":["\r\n\r\n<template>\r\n  <div class=\"XingShiXuanZe\">\r\n    <!-- 提示占位内容 -->\r\n    <p>姓氏选择模块功能正在开发中...</p>\r\n  </div>\r\n</template>\r\n\r\n\r\n<!-- \r\n\r\n<template>\r\n  <div class=\"py-4\">\r\n    <div class=\"flex items-start mb-8\">\r\n      <div class=\"text-[#999] whitespace-nowrap\">按姓氏首字母选择：</div>\r\n      <div class=\"flex flex-wrap gap-4\">\r\n        <div\r\n          class=\"w-[30px] h-[30px] text-center leading-[30px] text-#333 font-bold cursor-pointer rounded-full hover:bg-[#eee]\"\r\n          :style=\"{ color: curLetter === v ? '#f40' : '#333' }\" v-for=\"v of alphabet\" :key=\"v\" @click=\"curLetter = v\">\r\n          {{ v }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"flex flex-wrap content-start gap-10 pl-4 h-[calc(100%-148px)] py-6 overflow-y-auto\">\r\n      <div class=\"relative px-1 py-1 rounded-full border-solid border-[#835754] border-[4px] cursor-pointer h-fit\"\r\n        v-for=\"item of filteredFamilyNames\" :key=\"item\" @click=\"onNameClick(item.label)\">\r\n        <i class=\"absolute top-[-30px] left-[50%] translate-x-[-50%] whitespace-nowrap\">{{ item.value }}</i>\r\n        <span\r\n          class=\"flex items-center justify-center text-[20px] font-bold w-[40px] h-[40px] bg-[#835754] text-white rounded-full whitespace-nowrap\">\r\n          {{ item.label }}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </div>  \r\n</template>\r\n -->\r\n\r\n<script setup>\r\nimport list from \"@/assets/new.json\";\r\nimport emitter from \"@/utils/emitter\";\r\nimport { pinyin } from \"pinyin-pro\";\r\nimport { computed, ref } from \"vue\";\r\n\r\n// const alphabet = Array.from({ length: 26 }, (_, i) => String.fromCharCode(65 + i));\r\nconst uniqueFamilyNames = [...new Set(list.map(item => item['姓氏']))].map((item) => {\r\n  return {\r\n    label: item,\r\n    value: pinyin(item)\r\n  };\r\n});\r\n\r\nconst curName = ref(\"\");\r\nconst curLetter = ref(\"\");\r\nconst filteredFamilyNames = computed(() => {\r\n  return uniqueFamilyNames.filter(item => item.value.startsWith(curLetter.value.toLowerCase()));\r\n});\r\n\r\nconst onNameClick = (value) => {\r\n  if (curName.value === value) {\r\n    return;\r\n  }\r\n  curName.value = value;\r\n  emitter.emit(\"data\", list.filter((item) => item[\"姓氏\"] === value));\r\n}\r\n</script>\r\n\r\n"],"mappings":";;;;;;;;;;AAuCA,OAAOA,IAAI,MAAM,mBAAmB;AACpC,OAAOC,OAAO,MAAM,iBAAiB;AACrC,SAASC,MAAM,QAAQ,YAAY;AACnC,SAASC,QAAQ,EAAEC,GAAG,QAAQ,KAAK;;AAEnC;;;;;;;;IACA,MAAMC,iBAAiB,GAAG,CAAC,GAAG,IAAIC,GAAG,CAACN,IAAI,CAACO,GAAG,CAACC,IAAI,IAAIA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAACD,GAAG,CAAEC,IAAI,IAAK;MACjF,OAAO;QACLC,KAAK,EAAED,IAAI;QACXE,KAAK,EAAER,MAAM,CAACM,IAAI;MACpB,CAAC;IACH,CAAC,CAAC;IAEF,MAAMG,OAAO,GAAGP,GAAG,CAAC,EAAE,CAAC;IACvB,MAAMQ,SAAS,GAAGR,GAAG,CAAC,EAAE,CAAC;IACzB,MAAMS,mBAAmB,GAAGV,QAAQ,CAAC,MAAM;MACzC,OAAOE,iBAAiB,CAACS,MAAM,CAACN,IAAI,IAAIA,IAAI,CAACE,KAAK,CAACK,UAAU,CAACH,SAAS,CAACF,KAAK,CAACM,WAAW,CAAC,CAAC,CAAC,CAAC;IAC/F,CAAC,CAAC;IAEF,MAAMC,WAAW,GAAIP,KAAK,IAAK;MAC7B,IAAIC,OAAO,CAACD,KAAK,KAAKA,KAAK,EAAE;QAC3B;MACF;MACAC,OAAO,CAACD,KAAK,GAAGA,KAAK;MACrBT,OAAO,CAACiB,IAAI,CAAC,MAAM,EAAElB,IAAI,CAACc,MAAM,CAAEN,IAAI,IAAKA,IAAI,CAAC,IAAI,CAAC,KAAKE,KAAK,CAAC,CAAC;IACnE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}