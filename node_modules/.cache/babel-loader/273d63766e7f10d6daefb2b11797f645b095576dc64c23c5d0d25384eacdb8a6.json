{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport * as echarts from \"echarts\";\nimport jsonData from '@/assets/new.json'; // 确保引入了 new.json\n\nexport default {\n  name: \"ZheXianTu\",\n  data() {\n    return {\n      myChart: null\n    };\n  },\n  mounted() {\n    // 初始化图表\n    this.myChart = echarts.init(document.getElementById(\"main\"));\n    // 加载默认的折线图数据（例如：姓氏“李”）\n    this.loadDefaultChart();\n  },\n  methods: {\n    // 加载默认的折线图数据\n    loadDefaultChart() {\n      const defaultSurname = '李'; // 你可以根据实际情况选择默认姓氏\n      const versionData = this.getSurnameVersionData(defaultSurname);\n      this.updateChart(versionData);\n    },\n    // 根据姓氏获取版本数据（假设数据结构中有“版本年代”和“数量”字段）\n    getSurnameVersionData(surname) {\n      // 筛选出该姓氏的数据\n      const surnameData = jsonData.filter(item => item.姓氏 === surname);\n      const versionData = [];\n      surnameData.forEach(item => {\n        // 假设 `item.版本年代` 是年份或某个时间戳，`item.数量` 是该时间点的数量\n        const version = item.版本年代;\n        const count = item.数量;\n\n        // 找到该版本数据，若存在则累加数量\n        const existingVersion = versionData.find(v => v.version === version);\n        if (existingVersion) {\n          existingVersion.count += count;\n        } else {\n          versionData.push({\n            version,\n            count\n          });\n        }\n      });\n\n      // 按照年份或版本年代排序\n      versionData.sort((a, b) => a.version - b.version);\n      return versionData;\n    },\n    // 更新图表\n    updateChart(versionData) {\n      const labels = versionData.map(item => item.version);\n      const data = versionData.map(item => item.count);\n      const option = {\n        title: {\n          left: \"center\",\n          text: \"家谱数量随时间的变化\" // 修改标题\n        },\n        tooltip: {\n          trigger: \"axis\"\n        },\n        xAxis: {\n          data: labels\n        },\n        yAxis: {},\n        series: [{\n          name: \"数量变化\",\n          type: \"line\",\n          showSymbol: false,\n          data: data,\n          lineStyle: {\n            width: 2\n          },\n          areaStyle: {\n            color: {\n              type: \"linear\",\n              x: 0,\n              y: 0,\n              x2: 0,\n              y2: 1\n            }\n          }\n        }]\n      };\n\n      // 设置图表配置\n      this.myChart.setOption(option);\n    }\n  }\n};","map":{"version":3,"names":["echarts","jsonData","name","data","myChart","mounted","init","document","getElementById","loadDefaultChart","methods","defaultSurname","versionData","getSurnameVersionData","updateChart","surname","surnameData","filter","item","姓氏","forEach","version","版本年代","count","数量","existingVersion","find","v","push","sort","a","b","labels","map","option","title","left","text","tooltip","trigger","xAxis","yAxis","series","type","showSymbol","lineStyle","width","areaStyle","color","x","y","x2","y2","setOption"],"sources":["D:\\下载\\jiapudemo1\\src\\components\\ZheXianTu.vue"],"sourcesContent":["<template>\r\n  <div class=\"ZheXianTu\">\r\n    <!-- 图表展示区域 -->\r\n    <div id=\"main\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from \"echarts\";\r\nimport jsonData from '@/assets/new.json'; // 确保引入了 new.json\r\n\r\nexport default {\r\n  name: \"ZheXianTu\",\r\n  data() {\r\n    return {\r\n      myChart: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    // 初始化图表\r\n    this.myChart = echarts.init(document.getElementById(\"main\"));\r\n    // 加载默认的折线图数据（例如：姓氏“李”）\r\n    this.loadDefaultChart();\r\n  },\r\n  methods: {\r\n    // 加载默认的折线图数据\r\n    loadDefaultChart() {\r\n      const defaultSurname = '李'; // 你可以根据实际情况选择默认姓氏\r\n      const versionData = this.getSurnameVersionData(defaultSurname);\r\n      this.updateChart(versionData);\r\n    },\r\n    // 根据姓氏获取版本数据（假设数据结构中有“版本年代”和“数量”字段）\r\n    getSurnameVersionData(surname) {\r\n      // 筛选出该姓氏的数据\r\n      const surnameData = jsonData.filter(item => item.姓氏 === surname);\r\n      const versionData = [];\r\n\r\n      surnameData.forEach(item => {\r\n        // 假设 `item.版本年代` 是年份或某个时间戳，`item.数量` 是该时间点的数量\r\n        const version = item.版本年代;\r\n        const count = item.数量;\r\n\r\n        // 找到该版本数据，若存在则累加数量\r\n        const existingVersion = versionData.find(v => v.version === version);\r\n        if (existingVersion) {\r\n          existingVersion.count += count;\r\n        } else {\r\n          versionData.push({ version, count });\r\n        }\r\n      });\r\n\r\n      // 按照年份或版本年代排序\r\n      versionData.sort((a, b) => a.version - b.version);\r\n\r\n      return versionData;\r\n    },\r\n    // 更新图表\r\n    updateChart(versionData) {\r\n      const labels = versionData.map(item => item.version);\r\n      const data = versionData.map(item => item.count);\r\n\r\n      const option = {\r\n        title: {\r\n          left: \"center\",\r\n          text: \"家谱数量随时间的变化\", // 修改标题\r\n        },\r\n        tooltip: {\r\n          trigger: \"axis\",\r\n        },\r\n        xAxis: {\r\n          data: labels,\r\n        },\r\n        yAxis: {},\r\n        series: [\r\n          {\r\n            name: \"数量变化\",\r\n            type: \"line\",\r\n            showSymbol: false,\r\n            data: data,\r\n            lineStyle: { width: 2 },\r\n            areaStyle: { color: { type: \"linear\", x: 0, y: 0, x2: 0, y2: 1 } },\r\n          },\r\n        ],\r\n      };\r\n\r\n      // 设置图表配置\r\n      this.myChart.setOption(option);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.ZheXianTu {\r\n  width: 100%; /* 父容器宽度 */\r\n  text-align: center; /* 父容器文字和内容居中 */\r\n}\r\n\r\n#main {\r\n  width: 60%; /* 图表宽度设置为 60% */\r\n  height: 600px; /* 图表高度为 600px */\r\n  margin: 0 auto; /* 居中 */\r\n  background: #fff;\r\n}\r\n</style>\r\n"],"mappings":";;;;;AAQA,OAAO,KAAKA,OAAM,MAAO,SAAS;AAClC,OAAOC,QAAO,MAAO,mBAAmB,EAAE;;AAE1C,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACD,OAAM,GAAIJ,OAAO,CAACM,IAAI,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;IAC5D;IACA,IAAI,CAACC,gBAAgB,CAAC,CAAC;EACzB,CAAC;EACDC,OAAO,EAAE;IACP;IACAD,gBAAgBA,CAAA,EAAG;MACjB,MAAME,cAAa,GAAI,GAAG,EAAE;MAC5B,MAAMC,WAAU,GAAI,IAAI,CAACC,qBAAqB,CAACF,cAAc,CAAC;MAC9D,IAAI,CAACG,WAAW,CAACF,WAAW,CAAC;IAC/B,CAAC;IACD;IACAC,qBAAqBA,CAACE,OAAO,EAAE;MAC7B;MACA,MAAMC,WAAU,GAAIf,QAAQ,CAACgB,MAAM,CAACC,IAAG,IAAKA,IAAI,CAACC,EAAC,KAAMJ,OAAO,CAAC;MAChE,MAAMH,WAAU,GAAI,EAAE;MAEtBI,WAAW,CAACI,OAAO,CAACF,IAAG,IAAK;QAC1B;QACA,MAAMG,OAAM,GAAIH,IAAI,CAACI,IAAI;QACzB,MAAMC,KAAI,GAAIL,IAAI,CAACM,EAAE;;QAErB;QACA,MAAMC,eAAc,GAAIb,WAAW,CAACc,IAAI,CAACC,CAAA,IAAKA,CAAC,CAACN,OAAM,KAAMA,OAAO,CAAC;QACpE,IAAII,eAAe,EAAE;UACnBA,eAAe,CAACF,KAAI,IAAKA,KAAK;QAChC,OAAO;UACLX,WAAW,CAACgB,IAAI,CAAC;YAAEP,OAAO;YAAEE;UAAM,CAAC,CAAC;QACtC;MACF,CAAC,CAAC;;MAEF;MACAX,WAAW,CAACiB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACT,OAAM,GAAIU,CAAC,CAACV,OAAO,CAAC;MAEjD,OAAOT,WAAW;IACpB,CAAC;IACD;IACAE,WAAWA,CAACF,WAAW,EAAE;MACvB,MAAMoB,MAAK,GAAIpB,WAAW,CAACqB,GAAG,CAACf,IAAG,IAAKA,IAAI,CAACG,OAAO,CAAC;MACpD,MAAMlB,IAAG,GAAIS,WAAW,CAACqB,GAAG,CAACf,IAAG,IAAKA,IAAI,CAACK,KAAK,CAAC;MAEhD,MAAMW,MAAK,GAAI;QACbC,KAAK,EAAE;UACLC,IAAI,EAAE,QAAQ;UACdC,IAAI,EAAE,YAAY,CAAE;QACtB,CAAC;QACDC,OAAO,EAAE;UACPC,OAAO,EAAE;QACX,CAAC;QACDC,KAAK,EAAE;UACLrC,IAAI,EAAE6B;QACR,CAAC;QACDS,KAAK,EAAE,CAAC,CAAC;QACTC,MAAM,EAAE,CACN;UACExC,IAAI,EAAE,MAAM;UACZyC,IAAI,EAAE,MAAM;UACZC,UAAU,EAAE,KAAK;UACjBzC,IAAI,EAAEA,IAAI;UACV0C,SAAS,EAAE;YAAEC,KAAK,EAAE;UAAE,CAAC;UACvBC,SAAS,EAAE;YAAEC,KAAK,EAAE;cAAEL,IAAI,EAAE,QAAQ;cAAEM,CAAC,EAAE,CAAC;cAAEC,CAAC,EAAE,CAAC;cAAEC,EAAE,EAAE,CAAC;cAAEC,EAAE,EAAE;YAAE;UAAE;QACnE,CAAC;MAEL,CAAC;;MAED;MACA,IAAI,CAAChD,OAAO,CAACiD,SAAS,CAACnB,MAAM,CAAC;IAChC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}